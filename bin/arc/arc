#!/usr/bin/env bash

arc_--() {
    /usr/bin/arc "$@"
}

arc_cane() {
    arc ci -a --amend --no-edit
}

arc_diff() {
    # Патчи, сформированные arc'ом, не соответствуют unified-формату и,
    # как следствие, несовместимы со многими инструментами
    arc -- diff --git "$@"
}

arc_show() {
    # См. комментарий к `arc_diff`'у
    arc -- show --git "$@"
}

arc_delta() {
    arc diff "$@" | delta -s --wrap-max-lines=unlimited
}

arc_tip() {
    arc show "$@" | delta -s --wrap-max-lines=unlimited
}

arc_apply() {
    git -C "$(arc root)" apply --no-index "$@"
}

arc_drop() {
    rebase drop "$@"
}

arc_edit() {
    rebase edit "$@"
}

arc_reword() {
    rebase reword "$@"
}

rebase() {
    local command=$1
    local commit=${2:-HEAD}

    # Аналогично `GIT_SEQUENCE_EDITOR='sed -i "1 s/pick/'$command'/"'`
    ARC_EDITOR='f() {
        local path=$1

        if [ "$(basename "$path")" = "arc-rebase-todo" ]; then
            sed -i "1 s/pick/'$command'/" "$path"
        else
            "$(arc config core.editor)" "$path"
        fi
    }; f' \
    arc rebase -i $commit~1
}

arc_shelve() {
    local message=$(arc show --json | jq -r '.[0].commits[0].message')

    if [[ ! -z "$(arc st -s)" ]]; then
        arc stash push -um "Working tree changes: $message"
    fi

    arc reset --soft HEAD~1
    arc stash push -m "Commit changes: $message"
}

arc_unshelve() {
    local message=$(arc show stash@{0} --json         \
                    | jq -r '.[0].commits[0].message' \
                    | perl -pe 's/^(.*?): (.*?): // if $. == 1')
    arc stash pop --index
    arc commit -am "$message"

    if [[ -z "$(arc stash list)" ]]; then
        return
    fi
    local changes=$(arc show stash@{0} --json         \
                    | jq -r '.[0].commits[0].message' \
                    | head -1                         \
                    | perl -pe 's/^(.*?): (.*?): .*$/\2/')
    if [[ "$changes" == "Working tree changes" ]]; then
        arc stash pop --index
    fi
}

arc() {
    if declare -F arc_$1 > /dev/null; then
        arc_"$@"
    else
        arc -- "$@"
    fi
}

arc "$@"
